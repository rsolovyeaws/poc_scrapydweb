# Add rate limiting to prevent overload
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

upstream scrapyd_servers {
    # Use least connected algorithm for better distribution
    least_conn;
    
    # Add health checks
    server scrapyd1:6800 max_fails=3 fail_timeout=30s;
    server scrapyd2:6800 max_fails=3 fail_timeout=30s;
    # Add more servers if you scale further
}

server {
    listen 80;
    
    # Add longer timeouts for scraping tasks
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;
    
    # Main proxy for Scrapyd API
    location / {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://scrapyd_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK";
    }
}

events {
    worker_connections 1024;
}